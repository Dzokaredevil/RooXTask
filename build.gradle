/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/tutorial_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'eclipse'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-snapshot' }
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.1.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.1.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.6.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.10.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-data', version: '5.1.6.RELEASE'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.8'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'
    testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '2.0.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.1.7.RELEASE'
}

// Define the main class for the application
mainClassName = 'RooXTask.RooXRest'

sourceCompatibility = 1.8
targetCompatibility = 1.8

classes.finalizedBy javadoc

configurations {
    jsondoclet
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'

sourceCompatibility = 1.8
targetCompatibility = 1.8

classes.finalizedBy javadoc

task copyRestDoc(type: Copy) {
    from "${asciidoctor.outputDir}/html5"
    into file("${buildDir}/resources/main/static")
}

jar {
    baseName = 'RooXRest'
    version = '1.0.0-RELEASE'
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static'
    }
}

bootRun {
    dependsOn asciidoctor
    dependsOn copyRestDoc
}

javadoc {
    destinationDir = file("${buildDir}/resources/main/static/javadoc")
}

asciidoctor {
    dependsOn test
    attributes 'snippets': file('build/generated-snippets')
    inputs.dir file('build/generated-snippets')
    outputDir "build/asciidoc"
    sourceDir 'src/main/asciidoc'
}